server:
  port: 9090

# 数据库配置
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 2004
    url: jdbc:mysql://localhost:3306/llf?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai


  mail:
    host: smtp.qq.com
    username: 2692433610@qq.com  # 请修改为你的邮箱
    password: jvbmianqmhqbdhce # 请修改为你的邮箱授权码
    port: 587
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.qq.com

  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password:  # 如果Redis设置了密码，请在这里填写
      database: 0  # 使用数据库0
      timeout: 10000ms
      connect-timeout: 10000ms
      lettuce:
        pool:
          max-active: 8   # 连接池最大连接数
          max-wait: -1ms  # 连接池最大阻塞等待时间
          max-idle: 8     # 连接池中的最大空闲连接
          min-idle: 2     # 连接池中的最小空闲连接
        shutdown-timeout: 100ms

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    mapUnderscoreToCamelCase: true
  mapper-locations: classpath:mapper/*.xml

# 其它配置...


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否从header读取token
  is-read-header: true
  # 是否从cookie读取token
  is-read-cookie: false
  # 使用Redis存储
  alone-redis:
    # Redis数据库索引
    database: 1
    # key前缀
    key-prefix: "satoken:"



